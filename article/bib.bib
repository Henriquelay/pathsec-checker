@article{polka,
  title = {PolKA: Polynomial Key-based Architecture for Source Routing in Network Fabrics},
  author = {Cristina Dominicini and Diego Mafioletti and Ana C. Locateli and Rodolfo Villaca and Magnos Martinello and Moisés Ribeiro and Alexander Gorodnik},
  year = {2020},
  pages = {326--334},
  doi = {10.1109/NetSoft48620.2020.9165501},
  booktitle = {2020 6th IEEE Conference on Network Softwarization (NetSoft)}
}

@article{polkap4,
  title = {Deploying PolKA Source Routing in P4 Switches : (Invited Paper)},
  author = {Cristina Dominicini and Rafael Guimarães and Diego Mafioletti and Magnos Martinello and Moises R. N. Ribeiro and Rodolfo Villaça and Frédéric Loui and Jordi Ortiz and Frank Slyne and Marco Ruffini and Eoin Kenny},
  year = {2021},
  pages = {1--3},
  doi = {10.23919/ONDM51796.2021.9492363},
  booktitle = {2021 International Conference on Optical Network Design and Modeling (ONDM)}
}

@article{potpolka,
  title = {PoT-PolKA: Let the Edge Control the Proof-of-Transit in Path-Aware Networks},
  author = {Everson Scherrer Borges and Magnos Martinello and Vitor B. Bonella and Abraão J. dos Santos and Roberta L. Gomes and Cristina K. Dominicini and Rafael Silva Guimarães and Gabriel T. Menegueti and Marinho Barcellos and Marco Ruffini},
  year = {2024},
  pages = {3681--3691},
  doi = {10.1109/TNSM.2024.3389457},
  journal = {IEEE Transactions on Network and Service Management},
  volume = {21},
  number = {4}
}

@article{pathsec,
  title = {PathSec: Path-Aware Secure Routing with Native Path Verification and Auditability},
  author = {Magnos Martinello and Roberta Lima Gomes and Everson S. Borges and Henrique Coutinho Layber and Vitor B. Bonella and Cristina K. Dominicini and Rafael Guimarães and Moisés Ribeiro and Marinho Barcellos},
  year = {2024},
  journal = {Article}
}

@article{p4,
  title = {P4: programming protocol-independent packet processors},
  author = {Pat Bosshart and Dan Daly and Glen Gibb and Martin Izzard and Nick McKeown and Jennifer Rexford and Cole Schlesinger and Dan Talayco and Amin Vahdat and George Varghese and David Walker},
  year = {2014},
  month = {July},
  pages = {87--95},
  doi = {10.1145/2656877.2656890},
  url = {https://doi.org/10.1145/2656877.2656890},
  journal = {SIGCOMM Comput. Commun. Rev.},
  volume = {44},
  number = {3},
  abstract = {P4 is a high-level language for programming protocol-independent packet processors. P4 works in conjunction with SDN control protocols like OpenFlow. In its current form, OpenFlow explicitly specifies protocol headers on which it operates. This set has grown from 12 to 41 fields in a few years, increasing the complexity of the specification while still not providing the flexibility to add new headers. In this paper we propose P4 as a strawman proposal for how OpenFlow should evolve in the future. We have three goals: (1) Reconfigurability in the field: Programmers should be able to change the way switches process packets once they are deployed. (2) Protocol independence: Switches should not be tied to any specific network protocols. (3) Target independence: Programmers should be able to describe packet-processing functionality independently of the specifics of the underlying hardware. As an example, we describe how to use P4 to configure a switch to add a new hierarchical label.}
}

@article{mininet-wifi,
  title = {Mininet-WiFi: Emulating Software-Defined Wireless Networks},
  author = {Ramon Fontes and Samira Afzal and Samuel Brito and Mateus Santos and Christian Esteve Rothenberg},
  year = {2015},
  month = {November},
  abstract = {As the density of wireless networks continues to grow with more clients, more base stations, and more traffic, designing cost-effective wireless solutions with efficient resource usage and ease to manage is an increasing challenging task due to the overall system complexity. A number of vendors offer scalable and high-performance wireless networks but at a high cost and commonly as a single-vendor solution, limiting the ability to innovate after roll-out. Recent Software-Defined Networking (SDN) approaches propose new means for network virtualization and programmability advancing the way networks can be designed and operated, including user-defined features and customized behaviour even at runtime. However, means for rapid prototyping and experimental evaluation of SDN for wireless environments are not yet available. This paper introduces Mininet-WiFi as a tool to emulate wireless OpenFlow/SDN scenarios allowing high-fidelity experiments that replicate real networking environments. Mininet-WiFi augments the well-known Mininet emulator with virtual wireless stations and access points while keeping the original SDN capabilities and the lightweight virtualization software architecture. We elaborate on the potential applications of Mininet-Wifi and discuss the benefits and current limitations. Two use cases based on IEEE 802.11 demonstrate available functionality in our open source developments.},
  booktitle = {2nd International Workshop on Management of SDN and NFV Systems, 2015(ManSDN/NFV 2015)},
  location = {Barcelona, Spain}
}

@article{mininet,
  title = {A network in a laptop: rapid prototyping for software-defined networks},
  author = {Bob Lantz and Brandon Heller and Nick McKeown},
  year = {2010},
  url = {https://doi.org/10.1145/1868447.1868466},
  doi = {10.1145/1868447.1868466},
  isbn = {9781450304092},
  abstract = {Mininet is a system for rapidly prototyping large networks on the constrained resources of a single laptop. The lightweight approach of using OS-level virtualization features, including processes and network namespaces, allows it to scale to hundreds of nodes. Experiences with our initial implementation suggest that the ability to run, poke, and debug in real time represents a qualitative change in workflow. We share supporting case studies culled from over 100 users, at 18 institutions, who have developed Software-Defined Networks (SDN). Ultimately, we think the greatest value of Mininet will be supporting collaborative network research, by enabling self-contained SDN prototypes which anyone with a PC can download, run, evaluate, explore, tweak, and build upon.},
  booktitle = {Proceedings of the 9th ACM SIGCOMM Workshop on Hot Topics in Networks},
  publisher = {Association for Computing Machinery},
  location = {Monterey, California}
}

@misc{bmv2,
  title = {Behavioral Model},
  url = {https://github.com/p4lang/behavioral-model},
  note = {Accessed: 2024-09-26}
}

@misc{scapy,
  title = {Scapy},
  author = {Biondi Philippe secdev},
  year = {2003},
  url = {https://scapy.net/},
  note = {Accessed: 2024-09-26}
}

@misc{wireshark,
  title = {Wireshark},
  author = {Wireshark Foundation},
  year = {2006},
  url = {https://www.wireshark.org/},
  note = {Accessed: 2024-09-26}
}

@misc{siphash,
  title = {SipHash: a fast short-input PRF},
  author = {Jean-Philippe Aumasson and Daniel J. Bernstein},
  year = {2012},
  url = {https://eprint.iacr.org/2012/351},
  note = {Cryptology ePrint Archive, Paper 2012/351}
}

@misc{reversingCRC,
  title = {Reversing crc–theory and practice},
  author = {Martin Stigge and Henryk Plötz and Wolf Müller and Jens-Peter Redlich},
  year = {2006}
}
